FROM --platform=${TARGETPLATFORM:-linux/amd64} golang:alpine as go
FROM --platform=${TARGETPLATFORM:-linux/amd64} jc21/alpine-nginx-full:${BASE_TAG:-latest}

RUN echo "Golang: ${TARGETPLATFORM:-linux/amd64}" >> /built-for-arch

LABEL maintainer="Jamie Curnow <jc@jc21.com>"

ARG TARGETPLATFORM
ARG BUILDPLATFORM

RUN apk add --no-cache ca-certificates \
	g++ make pcre-dev openssl-dev zlib-dev \
	build-base git npm nodejs-current yarn \
	readline-dev \
	&& rm -rf /var/cache/apk/*

# copy go from golang
COPY --from=go /usr/local/go /usr/local/go

ENV GOPATH=/opt/go PATH="/usr/local/go/bin:$PATH:/opt/go/bin"
RUN mkdir -p "$GOPATH/src" "$GOPATH/bin" \
	&& chmod -R 777 "$GOPATH" \
	&& echo "====> ${TARGETPLATFORM}: $(go version)"

WORKDIR /root

# Gotools
RUN if [ "$TARGETPLATFORM" == "" ] || [ "$TARGETPLATFORM" == "linux/amd64" ]; then cd /usr && wget -O- -nv https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v1.27.0; fi
RUN go get -u github.com/kyoh86/richgo
